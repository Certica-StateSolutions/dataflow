@model DataFlow.Models.Agent

@Html.AntiForgeryToken()
@Html.ValidationSummary(true, "", new { @class = "text-danger" })
<h4>Connection</h4>
<div class="form-group">
    <div class="col-sm-2">
        @Html.LabelFor(m => m.Name, new { @class = "control-label" })
    </div>
    <div class="col-sm-10">
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control", type = "text", placeholder = "Name" })
        @Html.ValidationMessageFor(m => m.Name)
    </div>
</div>
<div class="form-group">
    <div class="col-sm-2">
        @Html.LabelFor(m => m.AgentTypeCode, new { @class = "control-label" })
    </div>
    <div class="col-sm-10">
        @Html.DropDownListFor(m => m.AgentTypeCode, (IEnumerable<SelectListItem>)ViewBag.AgentTypes, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.AgentTypeCode)
    </div>
</div>
<div class="form-group">
    <div class="col-sm-2">
        @Html.LabelFor(m => m.Url, new { @class = "control-label" })
    </div>
    <div class="col-sm-10">
        @Html.TextBoxFor(m => m.Url, new { @class = "form-control", type = "text", placeholder = "Url" })
        @Html.ValidationMessageFor(m => m.Url)
    </div>
</div>
<div class="form-group">
    <div class="col-sm-2">
        @Html.LabelFor(m => m.Username, new { @class = "control-label" })
    </div>
    <div class="col-sm-10">
        @Html.TextBoxFor(m => m.Username, new { @class = "form-control", type = "text", placeholder = "Username", autocomplete = "off" })
        @Html.ValidationMessageFor(m => m.Username)
    </div>
</div>
<div class="form-group">
    <div class="col-sm-2">
        @Html.LabelFor(m => m.Password, new { @class = "control-label" })
    </div>
    <div class="col-sm-10">
        @Html.TextBoxFor(m => m.Password, new { @class = "form-control", type = "password", placeholder = "Password", autocomplete = "off" })
        @Html.ValidationMessageFor(m => m.Password)
    </div>
</div>
<div class="form-group">
    <div class="col-sm-2">
        @Html.LabelFor(m => m.Directory, new { @class = "control-label" })
    </div>
    <div class="col-sm-10">
        @Html.TextBoxFor(m => m.Directory, new { @class = "form-control", type = "text", placeholder = "Directory" })
        @Html.ValidationMessageFor(m => m.Directory)
    </div>
</div>
<div class="form-group">
    <div class="col-sm-2">
        @Html.LabelFor(m => m.FilePattern, new { @class = "control-label" })
    </div>
    <div class="col-sm-10">
        @Html.TextBoxFor(m => m.FilePattern, new { @class = "form-control", type = "text", placeholder = "File Pattern" })
        @Html.ValidationMessageFor(m => m.FilePattern)
    </div>
</div>
<div class="form-group">
    <div class="col-sm-offset-2 col-sm-10">
        @Html.CheckBoxFor(m => m.Enabled) @Html.LabelFor(m => m.Enabled)
    </div>
</div>
<div class="form-group">
    <div class="col-sm-offset-2 col-sm-10">
        <button id="btnTest" type="button" class="btn btn-primary">Test Connection</button>
    </div>
</div>

<h4>Data Maps</h4>
<table id="tblAgentDataMaps" class="table table-striped table-hover table-bordered table-responsive">
    <thead>
        <tr>
            <td>Name</td>
            <td>Processing Order</td>
            <td></td>
        </tr>
    </thead>
    <tbody>
        @foreach (var m in Model.DataMapAgents)
        {
            <tr>
                <td>@m.DataMap.Name</td>
                <td>@m.ProcessingOrder</td>
                <td style="text-align: center;">@Html.ActionLink("Delete", "DeleteDataMap", new { agentId = Model.Id, id = m.Id })</td>
            </tr>
        }
    </tbody>
</table>

<div class="form-group row">
    <div class="col-xs-2">
        @Html.Label("Add Data Map", new { @class = "control-label", @for = "ddlDataMaps" })
    </div>
    <div class="col-xs-6">
        @Html.DropDownList("ddlDataMaps", (IEnumerable<SelectListItem>)ViewBag.DataMaps, new { @class = "form-control" })
    </div>
    <div class="col-xs-2">
        @{
            var lastProcessOrder = 0;

            if (Model.DataMapAgents.Any())
            {
                lastProcessOrder = Model.DataMapAgents.Max(x => x.ProcessingOrder);
            }
        }

        @Html.Hidden("dataMapAgentNextOrder", lastProcessOrder)
        <button id="btnAddMap" name="btnAddMap" type="submit" class="btn btn-default">Add Map</button>
    </div>
</div>

<h4>Schedule</h4>
<table id="tblAgentSchedule" class="table table-striped table-hover table-bordered table-responsive">
    <thead>
        <tr>
            <td>Day</td>
            <td>Hour</td>
            <td>Minute</td>
            <td></td>
        </tr>
    </thead>
    <tbody>
        @foreach (var m in Model.AgentSchedules)
        {
            <tr>
                <td>@Enum.GetName(typeof(DayOfWeek), m.Day)</td>
                <td>@(Convert.ToString(m.Hour).PadLeft(2, '0'))</td>
                <td>@(Convert.ToString(m.Minute).PadLeft(2, '0'))</td>
                <td style="text-align: center;">@Html.ActionLink("Delete", "DeleteSchedule", new { agentId = Model.Id, id = m.Id })</td>
            </tr>
        }
    </tbody>
</table>

<div class="form-group row">
    <div class="col-xs-2">
        @Html.Label("Add Schedule", new { @class = "control-label", @for = "ddlDay" })
    </div>
    <div class="col-xs-2">
        <select id="ddlDay" name="ddlDay" class="form-control">
            <option value="">Select Day</option>
            @foreach (var i in Enumerable.Range(0, 7))
            {
                <option value="@i">@Enum.GetName(typeof(DayOfWeek), i)</option>
            }
        </select>
    </div>
    <div class="col-xs-2">
        <select id="ddlHour" name="ddlHour" class="form-control">
            <option value="">Select Hour</option>
            @foreach (var i in Enumerable.Range(0, 24))
            {
                <option value="@i">@i</option>
            }
        </select>
    </div>
    <div class="col-xs-2">
        <select id="ddlMinute" name="ddlMinute" class="form-control">
            <option value="">Select Minute</option>
            @foreach (var i in Enumerable.Range(0, 60))
            {
                <option value="@i">@i</option>
            }
        </select>
    </div>
    <div class="col-xs-2">
        <button id="btnAddSchedule" name="btnAddSchedule" type="submit" class="btn btn-default">Add Schedule</button>
    </div>
</div>
<div class="form-group">
    <div class="col-sm-offset-2 col-sm-10">
        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.Custom)
        @Html.HiddenFor(m => m.Queue)
        <button id="btnSubmit" type="submit" class="btn btn-primary">Save Agent</button>
    </div>
</div>
<div id="divAgentTest" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Agent Test Results</h4>
            </div>
            <div id="divAgentTestResults" class="modal-body">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>