@model DataFlow.Web.Models.SchoolViewModel.AddOrUpdate

@Html.AntiForgeryToken()
@Html.ValidationSummary(true, "", new { @class = "text-danger" })
<h4>School Information</h4>
<div class="form-group">
    <div class="col-sm-2">
        @Html.LabelFor(m => m.School.LocalEducationAgencyReference, new { @class = "control-label" })
    </div>
    <div class="col-sm-10">
        @Html.DropDownListFor(m => m.School.LocalEducationAgencyReference.localEducationAgencyId, (IEnumerable<SelectListItem>)ViewBag.Districts, new { @class = "form-control" })
    </div>
</div>
<div class="form-group">
    <div class="col-sm-2">
        @Html.LabelFor(m => m.School.SchoolId, new { @class = "control-label" })
    </div>
    <div class="col-sm-10">
        @Html.TextBoxFor(m => m.School.SchoolId, new { @class = "form-control", type = "text", placeholder = "School Id" })
    </div>
</div>
<div class="form-group">
    <div class="col-sm-2">
        @Html.LabelFor(m => m.School.NameOfInstitution, new { @class = "control-label" })
    </div>
    <div class="col-sm-10">
        @Html.TextBoxFor(m => m.School.NameOfInstitution, new { @class = "form-control", type = "text", placeholder = "School Name" })
    </div>
</div>
<div class="form-group">
    <div class="col-sm-2">
        @Html.LabelFor(m => m.School.ShortNameOfInstitution, new { @class = "control-label" })
    </div>
    <div class="col-sm-10">
        @Html.TextBoxFor(m => m.School.ShortNameOfInstitution, new { @class = "form-control", type = "text", placeholder = "School Abbreviation" })
    </div>
</div>
<div class="form-group">
    <div class="col-sm-2">
        @Html.LabelFor(m => m.School.WebSite, new { @class = "control-label" })
    </div>
    <div class="col-sm-10">
        @Html.TextBoxFor(m => m.School.WebSite, new { @class = "form-control", type = "text", placeholder = "Website" })
    </div>
</div>
<h4>Mailing Address</h4>
<div class="form-group">
    <div class="col-sm-2">
        @Html.LabelFor(m => m.MailingAddress.StreetNumberName, new { @class = "control-label" })
    </div>
    <div class="col-sm-10">
        @Html.TextBoxFor(m => m.MailingAddress.StreetNumberName, new { @class = "form-control", type = "text", placeholder = "Street Address" })
    </div>
</div>
<div class="form-group">
    <div class="col-sm-2">
        @Html.LabelFor(m => m.MailingAddress.City, new { @class = "control-label" })
    </div>
    <div class="col-sm-10">
        @Html.TextBoxFor(m => m.MailingAddress.City, new { @class = "form-control", type = "text", placeholder = "City" })
    </div>
</div>
<div class="form-group">
    <div class="col-sm-2">
        @Html.LabelFor(m => m.MailingAddress.StateAbbreviationType, new { @class = "control-label" })
    </div>
    <div class="col-sm-10">
        @Html.TextBoxFor(m => m.MailingAddress.StateAbbreviationType, new { @class = "form-control", type = "text", placeholder = "State Abbreviation" })
    </div>
</div>
<div class="form-group">
    <div class="col-sm-2">
        @Html.LabelFor(m => m.MailingAddress.PostalCode, new { @class = "control-label" })
    </div>
    <div class="col-sm-10">
        @Html.TextBoxFor(m => m.MailingAddress.PostalCode, new { @class = "form-control", type = "text", placeholder = "Postal Code" })
    </div>
</div>
<div class="form-group">
    <div class="col-sm-2">
        @Html.LabelFor(m => m.GradeLevels, new { @class = "control-label" })
    </div>
    <div class="col-sm-10">
        @for (var i = 0; i < Model.GradeLevels.Count; i++)
            {
            <div>
                @Html.CheckBoxFor(m => m.GradeLevels[i].Checked, new { id = Model.GradeLevels[i].Text.Replace(" ", "_") })
                @Html.HiddenFor(m => m.GradeLevels[i].Text)
                @Html.LabelFor(m => m.GradeLevels[i].Text, Model.GradeLevels[i].Text, new { @for = Model.GradeLevels[i].Text.Replace(" ", "_") })
            </div>
        }
    </div>
</div>
<div class="form-group">
    <div class="col-sm-offset-2 col-sm-10">
        @Html.HiddenFor(m => m.School.Id)
        <button id="btnSubmit" type="submit" class="btn btn-primary">Submit</button>
    </div>
</div>
