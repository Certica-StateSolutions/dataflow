@using DataFlow.Common.ExtensionMethods

@model DataFlow.Web.Models.DataMapperViewModel

@foreach (var f in Model.Fields)
{
    if (!f.SubDataMappers.Any())
    {
        <div class="form-group" id="@($"div{f.DataMapperProperty.UniqueKey}_Header")">
            <div class="col-sm-2">
                <label id="@($"lbl{f.DataMapperProperty.UniqueKey}")" name="@($"lbl{f.DataMapperProperty.UniqueKey}")" for="@($"ddl{f.DataMapperProperty.UniqueKey}_SourceColumn")">@($"{f.Name.UpperCaseFirstLetter().UnPascalCase()}")</label>
            </div>
            <div class="col-sm-10 field-block">
                <select id="@($"ddl{f.DataMapperProperty.UniqueKey}_SourceType")" name="@($"ddl{f.DataMapperProperty.UniqueKey}_SourceType")" class="form-control source-type">
                    @foreach (var sourceType in Model.DataSources)
                    {
                        <option value="@sourceType.Value" @(sourceType.Value == f.DataMapperProperty.Source ? "selected" : "")>@sourceType.Text</option>
                    }
                </select>
                <select id="@($"ddl{f.DataMapperProperty.UniqueKey}_SourceColumn")" name="@($"ddl{f.DataMapperProperty.UniqueKey}_SourceColumn")" class="form-control" @Html.Raw(f.DataMapperProperty.ShowSourceColumn ? "" : "style='display: none;'")>
                    @foreach (var sourceColumn in Model.SourceColumns)
                    {
                        <option value="@sourceColumn.Value" @(sourceColumn.Value == f.DataMapperProperty.SourceColumn ? "selected" : "")>@sourceColumn.Text</option>
                    }
                    @if (!string.IsNullOrWhiteSpace(f.DataMapperProperty.SourceColumn) && Model.SourceColumns.All(x => x.Value != f.DataMapperProperty.SourceColumn))
                    {
                        <option value="@f.DataMapperProperty.SourceColumn" selected="">@f.DataMapperProperty.SourceColumn</option>
                    }
                </select>
                <select id="@($"ddl{f.DataMapperProperty.UniqueKey}_SourceTable")" name="@($"ddl{f.DataMapperProperty.UniqueKey}_SourceTable")" class="form-control" @Html.Raw(f.DataMapperProperty.ShowSourceTable ? "" : "style='display: none;'")>
                    @foreach (var sourceTable in Model.SourceTables)
                    {
                        <option value="@sourceTable.Value" @(sourceTable.Value == f.DataMapperProperty.SourceTable ? "selected" : "")>@sourceTable.Text</option>
                    }
                </select>
                <input id="@($"txt{f.DataMapperProperty.UniqueKey}_StaticValue")" name="@($"txt{f.DataMapperProperty.UniqueKey}_StaticValue")" type="text" class="form-control" placeholder="Static Value" value="@f.DataMapperProperty.Value" @Html.Raw(f.DataMapperProperty.ShowStaticValue ? "" : "style='display: none;'") />
                <input id="@($"txt{f.DataMapperProperty.UniqueKey}_DefaultValue")" name="@($"txt{f.DataMapperProperty.UniqueKey}_DefaultValue")" type="text" class="form-control" placeholder="Default Value" value="@f.DataMapperProperty.Default" @Html.Raw(f.DataMapperProperty.ShowDefaultValue ? "" : "style='display: none;'") />
                <input id="@($"hf{f.DataMapperProperty.UniqueKey}_DataType")" name="@($"hf{f.DataMapperProperty.UniqueKey}_DataType")" type="hidden" value="@f.DataMapperProperty.DataType" />
                <input id="@($"hf{f.DataMapperProperty.UniqueKey}_ChildType")" name="@($"hf{f.DataMapperProperty.UniqueKey}_ChildType")" type="hidden" value="@f.DataMapperProperty.ChildType" />
                <input id="@($"hf{f.DataMapperProperty.UniqueKey}_ParentType")" name="@($"hf{f.DataMapperProperty.UniqueKey}_ParentType")" type="hidden" value="@f.DataMapperProperty.ParentType" />
            </div>
        </div>
    }
    else
    {
        <div id="@($"div{f.DataMapperProperty.UniqueKey}")">
            @for (var i = 0; i < f.SubDataMappers.Count; i++)
            {
                var s = f.SubDataMappers[i];

                if (i == 0)
                {
                    <div class="form-group" id="@($"div{f.DataMapperProperty.UniqueKey}_Header")">
                        <div class="col-sm-2">
                            <label id="@($"lbl{f.DataMapperProperty.UniqueKey}")" name="@($"lbl{f.DataMapperProperty.UniqueKey}")" for="@($"ddl{f.DataMapperProperty.UniqueKey}_SourceColumn")">@($"{f.Name.UpperCaseFirstLetter().UnPascalCase()}")</label>
                        </div>
                        <div class="col-sm-10 field-block">
                            <input id="@($"txt{f.DataMapperProperty.UniqueKey}_StaticValue")" name="@($"txt{f.DataMapperProperty.UniqueKey}_StaticValue")" type="text" class="form-control" placeholder="Static Value" style="display: none;" />
                            <input id="@($"txt{f.DataMapperProperty.UniqueKey}_DefaultValue")" name="@($"txt{f.DataMapperProperty.UniqueKey}_DefaultValue")" type="text" class="form-control" placeholder="Default Value" style="display: none;" />
                            <input id="@($"hf{f.DataMapperProperty.UniqueKey}_DataType")" name="@($"hf{f.DataMapperProperty.UniqueKey}_DataType")" type="hidden" value="@f.DataMapperProperty.DataType" />
                            <input id="@($"hf{f.DataMapperProperty.UniqueKey}_ChildType")" name="@($"hf{f.DataMapperProperty.UniqueKey}_ChildType")" type="hidden" value="@f.DataMapperProperty.ChildType" />
                            <input id="@($"hf{f.DataMapperProperty.UniqueKey}_ParentType")" name="@($"hf{f.DataMapperProperty.UniqueKey}_ParentType")" type="hidden" value="@f.DataMapperProperty.ParentType" />
                        </div>
                    </div>
                }

                <div class="form-group">
                    <div>
                        <div class="col-sm-2" style="padding-left: 30px;">
                            <label id="@($"lbl{s.DataMapperProperty.UniqueKey}")" name="@($"lbl{s.DataMapperProperty.UniqueKey}")" for="@($"ddl{s.DataMapperProperty.UniqueKey}_SourceColumn")">@($"{s.Name.UpperCaseFirstLetter().UnPascalCase()}")</label>
                        </div>
                        <div class="col-sm-10 field-block" style="display: @(string.IsNullOrWhiteSpace(s.DataMapperProperty.ChildType) ? "block" : "none");">
                            <select id="@($"ddl{s.DataMapperProperty.UniqueKey}_SourceType")" name="@($"ddl{s.DataMapperProperty.UniqueKey}_SourceType")" class="form-control source-type">
                                @foreach (var sourceType in Model.DataSources)
                                {
                                    <option value="@sourceType.Value" @(sourceType.Value == s.DataMapperProperty.Source ? "selected" : "")>@sourceType.Text</option>
                                }
                            </select>
                            <select id="@($"ddl{s.DataMapperProperty.UniqueKey}_SourceColumn")" name="@($"ddl{s.DataMapperProperty.UniqueKey}_SourceColumn")" class="form-control" @Html.Raw(s.DataMapperProperty.ShowSourceColumn ? "" : "style='display: none;'")>
                                @foreach (var sourceColumn in Model.SourceColumns)
                                {
                                    <option value="@sourceColumn.Value" @(sourceColumn.Value == s.DataMapperProperty.SourceColumn ? "selected" : "")>@sourceColumn.Text</option>
                                }
                                @if (!string.IsNullOrWhiteSpace(s.DataMapperProperty.SourceColumn) && Model.SourceColumns.All(x => x.Value != s.DataMapperProperty.SourceColumn))
                                {
                                    <option value="@s.DataMapperProperty.SourceColumn" selected="">@s.DataMapperProperty.SourceColumn</option>
                                }
                            </select>
                            <select id="@($"ddl{s.DataMapperProperty.UniqueKey}_SourceTable")" name="@($"ddl{s.DataMapperProperty.UniqueKey}_SourceTable")" class="form-control" @Html.Raw(s.DataMapperProperty.ShowSourceTable ? "" : "style='display: none;'")>
                                @foreach (var sourceTable in Model.SourceTables)
                                {
                                    <option value="@sourceTable.Value" @(sourceTable.Value == s.DataMapperProperty.SourceTable ? "selected" : "")>@sourceTable.Text</option>
                                }
                            </select>
                            <input id="@($"txt{s.DataMapperProperty.UniqueKey}_StaticValue")" name="@($"txt{s.DataMapperProperty.UniqueKey}_StaticValue")" type="text" class="form-control" placeholder="Static Value" value="@s.DataMapperProperty.Value" @Html.Raw(s.DataMapperProperty.ShowStaticValue ? "" : "style='display: none;'") />
                            <input id="@($"txt{s.DataMapperProperty.UniqueKey}_DefaultValue")" name="@($"txt{s.DataMapperProperty.UniqueKey}_DefaultValue")" type="text" class="form-control" placeholder="Default Value" value="@s.DataMapperProperty.Default" @Html.Raw(s.DataMapperProperty.ShowDefaultValue ? "" : "style='display: none;'") />
                            <input id="@($"hf{s.DataMapperProperty.UniqueKey}_DataType")" name="@($"hf{s.DataMapperProperty.UniqueKey}_DataType")" type="hidden" value="@s.DataMapperProperty.DataType" />
                            <input id="@($"hf{s.DataMapperProperty.UniqueKey}_ChildType")" name="@($"hf{s.DataMapperProperty.UniqueKey}_ChildType")" type="hidden" value="@s.DataMapperProperty.ChildType" />
                            <input id="@($"hf{s.DataMapperProperty.UniqueKey}_ParentType")" name="@($"hf{s.DataMapperProperty.UniqueKey}_ParentType")" type="hidden" value="@s.DataMapperProperty.ParentType" />
                        </div>
                    </div>
                </div>
                if (s.SubDataMappers.Any())
                {
                    foreach (var t in s.SubDataMappers)
                    {
                        <div class="form-group">
                            <div>
                                <div class="col-sm-2" style="padding-left: 45px;">
                                    <label id="@($"lbl{t.DataMapperProperty.UniqueKey}")" name="@($"lbl{t.DataMapperProperty.UniqueKey}")" for="@($"ddl{t.DataMapperProperty.UniqueKey}_SourceColumn")">@($"{t.Name.UpperCaseFirstLetter().UnPascalCase()}")</label>
                                </div>
                                <div class="col-sm-10 field-block" style="display: @(string.IsNullOrWhiteSpace(t.DataMapperProperty.ChildType) ? "block" : "none");">
                                    <select id="@($"ddl{t.DataMapperProperty.UniqueKey}_SourceType")" name="@($"ddl{t.DataMapperProperty.UniqueKey}_SourceType")" class="form-control source-type">
                                        @foreach (var sourceType in Model.DataSources)
                                        {
                                            <option value="@sourceType.Value" @(sourceType.Value == t.DataMapperProperty.Source ? "selected" : "")>@sourceType.Text</option>
                                        }
                                    </select>
                                    <select id="@($"ddl{t.DataMapperProperty.UniqueKey}_SourceColumn")" name="@($"ddl{t.DataMapperProperty.UniqueKey}_SourceColumn")" class="form-control" @Html.Raw(t.DataMapperProperty.ShowSourceColumn ? "" : "style='display: none;'")>
                                        @foreach (var sourceColumn in Model.SourceColumns)
                                        {
                                            <option value="@sourceColumn.Value" @(sourceColumn.Value == t.DataMapperProperty.SourceColumn ? "selected" : "")>@sourceColumn.Text</option>
                                        }
                                        @if (!string.IsNullOrWhiteSpace(t.DataMapperProperty.SourceColumn) && Model.SourceColumns.All(x => x.Value != t.DataMapperProperty.SourceColumn))
                                        {
                                            <option value="@t.DataMapperProperty.SourceColumn" selected="">@t.DataMapperProperty.SourceColumn</option>
                                        }
                                    </select>
                                    <select id="@($"ddl{t.DataMapperProperty.UniqueKey}_SourceTable")" name="@($"ddl{t.DataMapperProperty.UniqueKey}_SourceTable")" class="form-control" @Html.Raw(f.DataMapperProperty.ShowSourceTable ? "" : "style='display: none;'")>
                                        @foreach (var sourceTable in Model.SourceTables)
                                        {
                                            <option value="@sourceTable.Value" @(sourceTable.Value == t.DataMapperProperty.SourceTable ? "selected" : "")>@sourceTable.Text</option>
                                        }
                                    </select>
                                    <input id="@($"txt{t.DataMapperProperty.UniqueKey}_StaticValue")" name="@($"txt{t.DataMapperProperty.UniqueKey}_StaticValue")" type="text" class="form-control" placeholder="Static Value" value="@t.DataMapperProperty.Value" @Html.Raw(t.DataMapperProperty.ShowStaticValue ? "" : "style='display: none;'") />
                                    <input id="@($"txt{t.DataMapperProperty.UniqueKey}_DefaultValue")" name="@($"txt{t.DataMapperProperty.UniqueKey}_DefaultValue")" type="text" class="form-control" placeholder="Default Value" value="@t.DataMapperProperty.Default" @Html.Raw(t.DataMapperProperty.ShowDefaultValue ? "" : "style='display: none;'") />
                                    <input id="@($"hf{t.DataMapperProperty.UniqueKey}_DataType")" name="@($"hf{t.DataMapperProperty.UniqueKey}_DataType")" type="hidden" value="@t.DataMapperProperty.DataType" />
                                    <input id="@($"hf{t.DataMapperProperty.UniqueKey}_ChildType")" name="@($"hf{t.DataMapperProperty.UniqueKey}_ChildType")" type="hidden" value="@t.DataMapperProperty.ChildType" />
                                    <input id="@($"hf{t.DataMapperProperty.UniqueKey}_ParentType")" name="@($"hf{t.DataMapperProperty.UniqueKey}_ParentType")" type="hidden" value="@t.DataMapperProperty.ParentType" />
                                </div>
                            </div>
                        </div>
                    }
                }
            }
        </div>
        if (!f.DataMapperProperty.DataType.EndsWith("Reference"))
        {
            <div class="form-group" id="@($"div{f.DataMapperProperty.UniqueKey}_Add")">
                <div class="col-sm-offset-2 col-sm-10">
                    <button id="@($"btn{f.DataMapperProperty.UniqueKey}")" type="button" class="btn btn-default add-row" data-rows="1">Add to @($"{f.Name.UpperCaseFirstLetter().UnPascalCase()}")</button>
                </div>
            </div>
        }
    }
}
@Html.Hidden("FieldNames", string.Join(";", Model.GetAllFieldNames()))