@using DataFlow.Common.ExtensionMethods
@model DataFlow.Web.Models.DataMapperViewModel

@foreach (var t in Model.Fields)
{
    <div class="form-group">
        <div class="col-sm-2">
            <label id="@($"lbl{t.FormFieldName}")" name="@($"lbl{t.FormFieldName}")" for="@($"ddl{t.FormFieldName}_SourceColumn")">@($"{t.Name.UpperCaseFirstLetter().UnPascalCase()}")</label>
        </div>
        <div class="col-sm-10 field-block" style="display: @(string.IsNullOrWhiteSpace(t.ChildType) ? "block": "none");">
            <select id="@($"ddl{t.FormFieldName}_SourceColumn")" name="@($"ddl{t.FormFieldName}_SourceColumn")" class="form-control">
                @foreach (var sourceColumn in Model.SourceColumns)
                {
                    <option value="@sourceColumn.Value">@sourceColumn.Text</option>
                }
            </select>
            <select id="@($"ddl{t.FormFieldName}_SourceType")" name="@($"ddl{t.FormFieldName}_SourceType")" class="form-control">
                @foreach (var sourceType in Model.DataSources)
                {
                    <option value="@sourceType.Value">@sourceType.Text</option>
                }
            </select>
            <input id="@($"txt{t.FormFieldName}_DefaultValue")" name="@($"txt{t.FormFieldName}_DefaultValue")" type="text" class="form-control" placeholder="Default Value" />
            <select id="@($"ddl{t.FormFieldName}_SourceTable")" name="@($"ddl{t.FormFieldName}_SourceTable")" class="form-control">
                @foreach (var sourceTable in Model.SourceTables)
                {
                    <option value="@sourceTable.Value">@sourceTable.Text</option>
                }
            </select>
            <input id="@($"txt{t.FormFieldName}_StaticValue")" name="@($"txt{t.FormFieldName}_StaticValue")" type="text" class="form-control" placeholder="Static Value" />
            <input id="@($"hf{t.FormFieldName}_DataType")" name="@($"hf{t.FormFieldName}_DataType")" type="hidden" value="@t.DataType" />
            <input id="@($"hf{t.FormFieldName}_ChildType")" name="@($"hf{t.FormFieldName}_ChildType")" type="hidden" value="@t.ChildType" />
            <input id="@($"hf{t.FormFieldName}_ParentType")" name="@($"hf{t.FormFieldName}_ParentType")" type="hidden" value="@t.ParentType" />
        </div>
    </div>
    foreach (var s in t.SubFields)
    {
        <div class="form-group">
            <div>
                <div class="col-sm-2" style="padding-left: 30px;">
                    <label id="@($"lbl{s.FormFieldName}")" name="@($"lbl{s.FormFieldName}")" for="@($"ddl{s.FormFieldName}_SourceColumn")">@($"{s.Name.UpperCaseFirstLetter().UnPascalCase()}")</label>
                </div>
                <div class="col-sm-10 field-block" style="display: @(string.IsNullOrWhiteSpace(s.ChildType) ? "block": "none");">
                    <select id="@($"ddl{s.FormFieldName}_SourceColumn")" name="@($"ddl{s.FormFieldName}_SourceColumn")" class="form-control">
                        @foreach (var sourceColumn in Model.SourceColumns)
                        {
                            <option value="@sourceColumn.Value">@sourceColumn.Text</option>
                        }
                    </select>
                    <select id="@($"ddl{s.FormFieldName}_SourceType")" name="@($"ddl{s.FormFieldName}_SourceType")" class="form-control">
                        @foreach (var sourceType in Model.DataSources)
                        {
                            <option value="@sourceType.Value">@sourceType.Text</option>
                        }
                    </select>
                    <input id="@($"txt{s.FormFieldName}_DefaultValue")" name="@($"txt{s.FormFieldName}_DefaultValue")" type="text" class="form-control" placeholder="Default Value" />
                    <select id="@($"ddl{s.FormFieldName}_SourceTable")" name="@($"ddl{s.FormFieldName}_SourceTable")" class="form-control">
                        @foreach (var sourceTable in Model.SourceTables)
                        {
                            <option value="@sourceTable.Value">@sourceTable.Text</option>
                        }
                    </select>
                    <input id="@($"txt{s.FormFieldName}_StaticValue")" name="@($"txt{s.FormFieldName}_StaticValue")" type="text" class="form-control" placeholder="Static Value" />
                    <input id="@($"hf{s.FormFieldName}_DataType")" name="@($"hf{s.FormFieldName}_DataType")" type="hidden" value="@s.DataType" />
                    <input id="@($"hf{s.FormFieldName}_ChildType")" name="@($"hf{s.FormFieldName}_ChildType")" type="hidden" value="@s.ChildType" />
                    <input id="@($"hf{s.FormFieldName}_ParentType")" name="@($"hf{s.FormFieldName}_ParentType")" type="hidden" value="@s.ParentType" />
                </div>
            </div>
        </div>
    }
}
@Html.Hidden("FieldNames", string.Join(";", Model.GetAllFieldNames()))
<script type="text/javascript">
    $(".field-block").change(function (e) {
        var frmData = $("#frmDataMapper").serialize();
        
        $.ajax({
            type: "POST",
            url: "/DataMapper/UpdateJsonMap?triggeredBy=" + e.target.id,
            data: frmData,
            dataType: "json",
            success: function (data) {
                $("#JsonMap").val(data);
            },
            fail: function (data) {
                alert("Error: " + data);
            }
        });
    });
</script>
 