@using System.Data
@model DataFlow.Web.Models.DataMapperViewModel

@{
    ViewBag.Title = "Advanced Data Mapper";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.Title</h2>

<style type="text/css">
    .field-block input[type],
    .field-block textarea,
    .field-block select {
        display: inline-block;
        margin-bottom: 5px;
        width: auto;
    }

    .property-border {
        border-top: #2fa4e7 thin solid;
        margin-top: -10px;
        padding-top: 10px;
    }

    #tblCsvDataPreview th, #tblCsvDataPreview td {
        white-space: nowrap;
        padding: 5px 5px;
    }

    #csvPreview {
        max-width: 100%;
        overflow: auto;
    }
</style>

@if (Model.ShowInfoMessage)
{
    <div class="panel @(Model.IsSuccess ? "panel-success" : "panel-danger")">
        <div class="panel-heading">@(Model.IsSuccess ? "Success" : "Error")</div>
        <div class="panel-body">@Model.InfoMessage</div>
    </div>
}

@using (Html.BeginForm("UploadFile", "DataMapper", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
    <div class="form-group">
        <div class="col-sm-2">
            @Html.Label("CSV File", new { @class = "control-label", @for = "uploadCsvFile" })
        </div>
        <div class="col-sm-8">
            @Html.TextBox("uploadCsvFile", null, new { @class = "form-control auto-height", type = "file", required = "required", accept = ".csv,text/csv" })
            
        </div>
        <div class="col-sm-2">
                <button id="btnUpload" type="submit" class="btn btn-primary">Upload</button>

        </div>
    </div>
}

@if (Model.CsvPreviewDataTable != null)
{
    <div id="csvPreview">
        <table id="tblCsvDataPreview" class="table table-striped table-hover table-bordered table-responsive">
            <thead>
                <tr>
                    @foreach (DataColumn column in Model.CsvPreviewDataTable.Columns)
                    {
                        <th>@column.ColumnName</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (DataRow row in Model.CsvPreviewDataTable.Rows)
                {
                    <tr>
                        @for (var i = 0; i <= Model.CsvPreviewDataTable.Columns.Count - 1; i++)
                        {
                            <td>
                                @row[i]
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@using (Html.BeginForm("Index", "DataMapper", FormMethod.Post, new { @class = "form-horizontal", id = "frmDataMapper" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <div class="col-sm-2">
            @Html.LabelFor(m => m.MapName, new { @class = "control-label" })
        </div>
        <div class="col-sm-10">
            @Html.TextBoxFor(m => m.MapName, new { @class = "form-control", type = "text", placeholder = "Map Name" })
            @Html.ValidationMessageFor(m => m.MapName)
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-2">
            @Html.LabelFor(m => m.MapToEntity, new { @class = "control-label" })
        </div>
        <div class="col-sm-4">
            @Html.DropDownListFor(m => m.MapToEntity, Model.Entities, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.MapToEntity)
        </div>
    </div>
    <div>
        @Html.Label("CSV Fields")
    </div>
    <div id="divModelFields" style="border: 1px solid #ccc; padding: 10px;">
        @Html.Partial("_PartialDataMapperFields", Model)
    </div>
    <div class="form-group">
        <div class="col-sm-2">
            @Html.LabelFor(m => m.JsonMap, new { @class = "control-label" })
        </div>
        <div class="col-sm-10">
            <button id="view_button" style="display:inline-block;" type="button" class="btn btn-primary" data-toggle="collapse" data-target="#JsonMap">View</button>
            @Html.TextAreaFor(m => m.JsonMap, new { @class = "form-control collapse fullmap", type = "text", placeholder = "Json Map", style = "height:500px;resize:none;min-height:500px" })
            @Html.ValidationMessageFor(m => m.JsonMap)
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-offset-2 col-sm-10">
            @Html.Hidden("CsvColumnHeaders", string.Join(",", Model.CsvColumnHeaders))
            @Html.HiddenFor(x => x.DataMapId)
            <button id="btnSubmit" type="submit" class="btn btn-primary">Save Map</button>
        </div>
    </div>
}
@section scripts{
    <script type="text/javascript">
        $(function() {
            $("#divModelFields").find("div").eq(0).removeClass("property-border");
        });

        $("#MapToEntity").change(function () {
            var frmData = $("#frmDataMapper").serialize();

            $.ajax({
                type: "POST",
                url: '@Url.Action("AddModelFields", "DataMapper")',
                data: frmData,
                success: function (data) {
                    $('#divModelFields').html(data);
                    $("#JsonMap").val("");
                    $("#divModelFields").find("div").eq(0).removeClass("property-border");
                },
                fail: function (data) {
                    alert("Error: " + data);
                }
            });
        });

        $("#btnUpload").click(function(e) {
            if (!$("#uploadCsvFile").val()) {
                e.preventDefault();
                alert("Please select a file to upload");
            }
        });
        /* Partial View JS */
        $(document).on("change", ".field-block", function (e) {
            var frmData = $("#frmDataMapper").serialize();

            $.ajax({
                type: "POST",
                url: "/DataMapper/UpdateJsonMap?triggeredBy=" + e.target.id,
                data: frmData,
                dataType: "json",
                success: function (data) {
                    $("#JsonMap").val(data);
                },
                fail: function (data) {
                    alert("Error: " + data);
                }
            });
        });

        $(document).on("change", ".source-type", function () {
            var sourceTypeFormId = this.id;
            var sourceTypeValue = this.value;

            var sourceColumnDropDownId = "#" + sourceTypeFormId.replace("_SourceType", "_SourceColumn");
            var sourceTableDropDownId = "#" + sourceTypeFormId.replace("_SourceType", "_SourceTable");
            var staticValueTextBoxId = "#" + sourceTypeFormId.replace("_SourceType", "_StaticValue").replace("ddl", "txt");
            var defaultValueTextBoxId = "#" + sourceTypeFormId.replace("_SourceType", "_DefaultValue").replace("ddl", "txt");;

            if (sourceTypeValue === "lookup-table") {
                $(sourceColumnDropDownId).show();
                $(sourceTableDropDownId).show();
                $(staticValueTextBoxId).hide();
                $(defaultValueTextBoxId).show();
            }
            else if (sourceTypeValue === "static") {
                $(sourceColumnDropDownId).hide();
                $(sourceTableDropDownId).hide();
                $(staticValueTextBoxId).show();
                $(defaultValueTextBoxId).hide();
            }
            else if (sourceTypeValue === "column") {
                $(sourceColumnDropDownId).show();
                $(sourceTableDropDownId).hide();
                $(staticValueTextBoxId).hide();
                $(defaultValueTextBoxId).show();
            }
            else {
                $(sourceColumnDropDownId).hide();
                $(sourceTableDropDownId).hide();
                $(staticValueTextBoxId).hide();
                $(defaultValueTextBoxId).hide();
            }
        });

        $(document).on("click", ".add-row", function (e) {
            var btnAddId = this.id;
            var divBefore = btnAddId.replace("btn", "div") + "_Add";
            var divToCopy = btnAddId.replace("btn", "div");

            var rowCount = parseInt($(this).attr("data-rows"));
            $(this).attr("data-rows", rowCount + 1);

            $("#" + divToCopy).clone(true)
                .attr("id", divToCopy + rowCount)
                .insertBefore("#" + divBefore)
                .find("*")
                .each(function () {
                    var newId = this.id;
                    if (newId) {
                        $(this).attr("id", newId + rowCount);

                        if ($(this).is("input:text,select")) {
                            $(this).val("");

                            if (newId.indexOf("SourceType") === -1) {
                                $(this).hide();
                            }
                        }
                    }
                });
        });
    </script>
}
